package top.testcross.zuji.bean;

import top.testcross.zuji.bean.interfaces.Example;

import java.util.ArrayList;
import java.util.List;

public class UimUserExample implements Example {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public UimUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("user_id like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("user_id not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserPostCountIsNull() {
            addCriterion("user_post_count is null");
            return (Criteria) this;
        }

        public Criteria andUserPostCountIsNotNull() {
            addCriterion("user_post_count is not null");
            return (Criteria) this;
        }

        public Criteria andUserPostCountEqualTo(Integer value) {
            addCriterion("user_post_count =", value, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountNotEqualTo(Integer value) {
            addCriterion("user_post_count <>", value, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountGreaterThan(Integer value) {
            addCriterion("user_post_count >", value, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_post_count >=", value, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountLessThan(Integer value) {
            addCriterion("user_post_count <", value, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountLessThanOrEqualTo(Integer value) {
            addCriterion("user_post_count <=", value, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountIn(List<Integer> values) {
            addCriterion("user_post_count in", values, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountNotIn(List<Integer> values) {
            addCriterion("user_post_count not in", values, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountBetween(Integer value1, Integer value2) {
            addCriterion("user_post_count between", value1, value2, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserPostCountNotBetween(Integer value1, Integer value2) {
            addCriterion("user_post_count not between", value1, value2, "userPostCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountIsNull() {
            addCriterion("user_img_count is null");
            return (Criteria) this;
        }

        public Criteria andUserImgCountIsNotNull() {
            addCriterion("user_img_count is not null");
            return (Criteria) this;
        }

        public Criteria andUserImgCountEqualTo(Integer value) {
            addCriterion("user_img_count =", value, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountNotEqualTo(Integer value) {
            addCriterion("user_img_count <>", value, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountGreaterThan(Integer value) {
            addCriterion("user_img_count >", value, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_img_count >=", value, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountLessThan(Integer value) {
            addCriterion("user_img_count <", value, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountLessThanOrEqualTo(Integer value) {
            addCriterion("user_img_count <=", value, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountIn(List<Integer> values) {
            addCriterion("user_img_count in", values, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountNotIn(List<Integer> values) {
            addCriterion("user_img_count not in", values, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountBetween(Integer value1, Integer value2) {
            addCriterion("user_img_count between", value1, value2, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserImgCountNotBetween(Integer value1, Integer value2) {
            addCriterion("user_img_count not between", value1, value2, "userImgCount");
            return (Criteria) this;
        }

        public Criteria andUserSexIsNull() {
            addCriterion("user_sex is null");
            return (Criteria) this;
        }

        public Criteria andUserSexIsNotNull() {
            addCriterion("user_sex is not null");
            return (Criteria) this;
        }

        public Criteria andUserSexEqualTo(Byte value) {
            addCriterion("user_sex =", value, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexNotEqualTo(Byte value) {
            addCriterion("user_sex <>", value, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexGreaterThan(Byte value) {
            addCriterion("user_sex >", value, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexGreaterThanOrEqualTo(Byte value) {
            addCriterion("user_sex >=", value, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexLessThan(Byte value) {
            addCriterion("user_sex <", value, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexLessThanOrEqualTo(Byte value) {
            addCriterion("user_sex <=", value, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexIn(List<Byte> values) {
            addCriterion("user_sex in", values, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexNotIn(List<Byte> values) {
            addCriterion("user_sex not in", values, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexBetween(Byte value1, Byte value2) {
            addCriterion("user_sex between", value1, value2, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserSexNotBetween(Byte value1, Byte value2) {
            addCriterion("user_sex not between", value1, value2, "userSex");
            return (Criteria) this;
        }

        public Criteria andUserLafCountIsNull() {
            addCriterion("user_laf_count is null");
            return (Criteria) this;
        }

        public Criteria andUserLafCountIsNotNull() {
            addCriterion("user_laf_count is not null");
            return (Criteria) this;
        }

        public Criteria andUserLafCountEqualTo(Integer value) {
            addCriterion("user_laf_count =", value, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountNotEqualTo(Integer value) {
            addCriterion("user_laf_count <>", value, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountGreaterThan(Integer value) {
            addCriterion("user_laf_count >", value, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_laf_count >=", value, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountLessThan(Integer value) {
            addCriterion("user_laf_count <", value, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountLessThanOrEqualTo(Integer value) {
            addCriterion("user_laf_count <=", value, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountIn(List<Integer> values) {
            addCriterion("user_laf_count in", values, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountNotIn(List<Integer> values) {
            addCriterion("user_laf_count not in", values, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountBetween(Integer value1, Integer value2) {
            addCriterion("user_laf_count between", value1, value2, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserLafCountNotBetween(Integer value1, Integer value2) {
            addCriterion("user_laf_count not between", value1, value2, "userLafCount");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("user_name in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("user_name not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserDpIdIsNull() {
            addCriterion("user_dp_id is null");
            return (Criteria) this;
        }

        public Criteria andUserDpIdIsNotNull() {
            addCriterion("user_dp_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserDpIdEqualTo(String value) {
            addCriterion("user_dp_id =", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdNotEqualTo(String value) {
            addCriterion("user_dp_id <>", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdGreaterThan(String value) {
            addCriterion("user_dp_id >", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_dp_id >=", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdLessThan(String value) {
            addCriterion("user_dp_id <", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdLessThanOrEqualTo(String value) {
            addCriterion("user_dp_id <=", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdLike(String value) {
            addCriterion("user_dp_id like", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdNotLike(String value) {
            addCriterion("user_dp_id not like", value, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdIn(List<String> values) {
            addCriterion("user_dp_id in", values, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdNotIn(List<String> values) {
            addCriterion("user_dp_id not in", values, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdBetween(String value1, String value2) {
            addCriterion("user_dp_id between", value1, value2, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserDpIdNotBetween(String value1, String value2) {
            addCriterion("user_dp_id not between", value1, value2, "userDpId");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIsNull() {
            addCriterion("user_password is null");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIsNotNull() {
            addCriterion("user_password is not null");
            return (Criteria) this;
        }

        public Criteria andUserPasswordEqualTo(String value) {
            addCriterion("user_password =", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotEqualTo(String value) {
            addCriterion("user_password <>", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordGreaterThan(String value) {
            addCriterion("user_password >", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("user_password >=", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLessThan(String value) {
            addCriterion("user_password <", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLessThanOrEqualTo(String value) {
            addCriterion("user_password <=", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLike(String value) {
            addCriterion("user_password like", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotLike(String value) {
            addCriterion("user_password not like", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIn(List<String> values) {
            addCriterion("user_password in", values, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotIn(List<String> values) {
            addCriterion("user_password not in", values, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordBetween(String value1, String value2) {
            addCriterion("user_password between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotBetween(String value1, String value2) {
            addCriterion("user_password not between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserIntroIsNull() {
            addCriterion("user_intro is null");
            return (Criteria) this;
        }

        public Criteria andUserIntroIsNotNull() {
            addCriterion("user_intro is not null");
            return (Criteria) this;
        }

        public Criteria andUserIntroEqualTo(String value) {
            addCriterion("user_intro =", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroNotEqualTo(String value) {
            addCriterion("user_intro <>", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroGreaterThan(String value) {
            addCriterion("user_intro >", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroGreaterThanOrEqualTo(String value) {
            addCriterion("user_intro >=", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroLessThan(String value) {
            addCriterion("user_intro <", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroLessThanOrEqualTo(String value) {
            addCriterion("user_intro <=", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroLike(String value) {
            addCriterion("user_intro like", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroNotLike(String value) {
            addCriterion("user_intro not like", value, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroIn(List<String> values) {
            addCriterion("user_intro in", values, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroNotIn(List<String> values) {
            addCriterion("user_intro not in", values, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroBetween(String value1, String value2) {
            addCriterion("user_intro between", value1, value2, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserIntroNotBetween(String value1, String value2) {
            addCriterion("user_intro not between", value1, value2, "userIntro");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountIsNull() {
            addCriterion("user_follower_count is null");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountIsNotNull() {
            addCriterion("user_follower_count is not null");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountEqualTo(Integer value) {
            addCriterion("user_follower_count =", value, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountNotEqualTo(Integer value) {
            addCriterion("user_follower_count <>", value, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountGreaterThan(Integer value) {
            addCriterion("user_follower_count >", value, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_follower_count >=", value, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountLessThan(Integer value) {
            addCriterion("user_follower_count <", value, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountLessThanOrEqualTo(Integer value) {
            addCriterion("user_follower_count <=", value, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountIn(List<Integer> values) {
            addCriterion("user_follower_count in", values, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountNotIn(List<Integer> values) {
            addCriterion("user_follower_count not in", values, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountBetween(Integer value1, Integer value2) {
            addCriterion("user_follower_count between", value1, value2, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowerCountNotBetween(Integer value1, Integer value2) {
            addCriterion("user_follower_count not between", value1, value2, "userFollowerCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountIsNull() {
            addCriterion("user_follow_count is null");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountIsNotNull() {
            addCriterion("user_follow_count is not null");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountEqualTo(Integer value) {
            addCriterion("user_follow_count =", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountNotEqualTo(Integer value) {
            addCriterion("user_follow_count <>", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountGreaterThan(Integer value) {
            addCriterion("user_follow_count >", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_follow_count >=", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountLessThan(Integer value) {
            addCriterion("user_follow_count <", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountLessThanOrEqualTo(Integer value) {
            addCriterion("user_follow_count <=", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountIn(List<Integer> values) {
            addCriterion("user_follow_count in", values, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountNotIn(List<Integer> values) {
            addCriterion("user_follow_count not in", values, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountBetween(Integer value1, Integer value2) {
            addCriterion("user_follow_count between", value1, value2, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountNotBetween(Integer value1, Integer value2) {
            addCriterion("user_follow_count not between", value1, value2, "userFollowCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table uim_user
     *
     * @mbggenerated do_not_delete_during_merge Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table uim_user
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}