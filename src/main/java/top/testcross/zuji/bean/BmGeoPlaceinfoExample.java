package top.testcross.zuji.bean;

import top.testcross.zuji.bean.interfaces.Example;

import java.util.ArrayList;
import java.util.List;

public class BmGeoPlaceinfoExample implements Example {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public BmGeoPlaceinfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPiIdIsNull() {
            addCriterion("pi_id is null");
            return (Criteria) this;
        }

        public Criteria andPiIdIsNotNull() {
            addCriterion("pi_id is not null");
            return (Criteria) this;
        }

        public Criteria andPiIdEqualTo(String value) {
            addCriterion("pi_id =", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdNotEqualTo(String value) {
            addCriterion("pi_id <>", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdGreaterThan(String value) {
            addCriterion("pi_id >", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdGreaterThanOrEqualTo(String value) {
            addCriterion("pi_id >=", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdLessThan(String value) {
            addCriterion("pi_id <", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdLessThanOrEqualTo(String value) {
            addCriterion("pi_id <=", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdLike(String value) {
            addCriterion("pi_id like", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdNotLike(String value) {
            addCriterion("pi_id not like", value, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdIn(List<String> values) {
            addCriterion("pi_id in", values, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdNotIn(List<String> values) {
            addCriterion("pi_id not in", values, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdBetween(String value1, String value2) {
            addCriterion("pi_id between", value1, value2, "piId");
            return (Criteria) this;
        }

        public Criteria andPiIdNotBetween(String value1, String value2) {
            addCriterion("pi_id not between", value1, value2, "piId");
            return (Criteria) this;
        }

        public Criteria andPiAddressIsNull() {
            addCriterion("pi_address is null");
            return (Criteria) this;
        }

        public Criteria andPiAddressIsNotNull() {
            addCriterion("pi_address is not null");
            return (Criteria) this;
        }

        public Criteria andPiAddressEqualTo(String value) {
            addCriterion("pi_address =", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressNotEqualTo(String value) {
            addCriterion("pi_address <>", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressGreaterThan(String value) {
            addCriterion("pi_address >", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressGreaterThanOrEqualTo(String value) {
            addCriterion("pi_address >=", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressLessThan(String value) {
            addCriterion("pi_address <", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressLessThanOrEqualTo(String value) {
            addCriterion("pi_address <=", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressLike(String value) {
            addCriterion("pi_address like", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressNotLike(String value) {
            addCriterion("pi_address not like", value, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressIn(List<String> values) {
            addCriterion("pi_address in", values, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressNotIn(List<String> values) {
            addCriterion("pi_address not in", values, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressBetween(String value1, String value2) {
            addCriterion("pi_address between", value1, value2, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiAddressNotBetween(String value1, String value2) {
            addCriterion("pi_address not between", value1, value2, "piAddress");
            return (Criteria) this;
        }

        public Criteria andPiCityIsNull() {
            addCriterion("pi_city is null");
            return (Criteria) this;
        }

        public Criteria andPiCityIsNotNull() {
            addCriterion("pi_city is not null");
            return (Criteria) this;
        }

        public Criteria andPiCityEqualTo(String value) {
            addCriterion("pi_city =", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityNotEqualTo(String value) {
            addCriterion("pi_city <>", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityGreaterThan(String value) {
            addCriterion("pi_city >", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityGreaterThanOrEqualTo(String value) {
            addCriterion("pi_city >=", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityLessThan(String value) {
            addCriterion("pi_city <", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityLessThanOrEqualTo(String value) {
            addCriterion("pi_city <=", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityLike(String value) {
            addCriterion("pi_city like", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityNotLike(String value) {
            addCriterion("pi_city not like", value, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityIn(List<String> values) {
            addCriterion("pi_city in", values, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityNotIn(List<String> values) {
            addCriterion("pi_city not in", values, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityBetween(String value1, String value2) {
            addCriterion("pi_city between", value1, value2, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCityNotBetween(String value1, String value2) {
            addCriterion("pi_city not between", value1, value2, "piCity");
            return (Criteria) this;
        }

        public Criteria andPiCountryIsNull() {
            addCriterion("pi_country is null");
            return (Criteria) this;
        }

        public Criteria andPiCountryIsNotNull() {
            addCriterion("pi_country is not null");
            return (Criteria) this;
        }

        public Criteria andPiCountryEqualTo(String value) {
            addCriterion("pi_country =", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryNotEqualTo(String value) {
            addCriterion("pi_country <>", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryGreaterThan(String value) {
            addCriterion("pi_country >", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryGreaterThanOrEqualTo(String value) {
            addCriterion("pi_country >=", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryLessThan(String value) {
            addCriterion("pi_country <", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryLessThanOrEqualTo(String value) {
            addCriterion("pi_country <=", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryLike(String value) {
            addCriterion("pi_country like", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryNotLike(String value) {
            addCriterion("pi_country not like", value, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryIn(List<String> values) {
            addCriterion("pi_country in", values, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryNotIn(List<String> values) {
            addCriterion("pi_country not in", values, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryBetween(String value1, String value2) {
            addCriterion("pi_country between", value1, value2, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiCountryNotBetween(String value1, String value2) {
            addCriterion("pi_country not between", value1, value2, "piCountry");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeIsNull() {
            addCriterion("pi_poi_type is null");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeIsNotNull() {
            addCriterion("pi_poi_type is not null");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeEqualTo(String value) {
            addCriterion("pi_poi_type =", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeNotEqualTo(String value) {
            addCriterion("pi_poi_type <>", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeGreaterThan(String value) {
            addCriterion("pi_poi_type >", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeGreaterThanOrEqualTo(String value) {
            addCriterion("pi_poi_type >=", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeLessThan(String value) {
            addCriterion("pi_poi_type <", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeLessThanOrEqualTo(String value) {
            addCriterion("pi_poi_type <=", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeLike(String value) {
            addCriterion("pi_poi_type like", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeNotLike(String value) {
            addCriterion("pi_poi_type not like", value, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeIn(List<String> values) {
            addCriterion("pi_poi_type in", values, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeNotIn(List<String> values) {
            addCriterion("pi_poi_type not in", values, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeBetween(String value1, String value2) {
            addCriterion("pi_poi_type between", value1, value2, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiPoiTypeNotBetween(String value1, String value2) {
            addCriterion("pi_poi_type not between", value1, value2, "piPoiType");
            return (Criteria) this;
        }

        public Criteria andPiNameIsNull() {
            addCriterion("pi_name is null");
            return (Criteria) this;
        }

        public Criteria andPiNameIsNotNull() {
            addCriterion("pi_name is not null");
            return (Criteria) this;
        }

        public Criteria andPiNameEqualTo(String value) {
            addCriterion("pi_name =", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameNotEqualTo(String value) {
            addCriterion("pi_name <>", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameGreaterThan(String value) {
            addCriterion("pi_name >", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameGreaterThanOrEqualTo(String value) {
            addCriterion("pi_name >=", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameLessThan(String value) {
            addCriterion("pi_name <", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameLessThanOrEqualTo(String value) {
            addCriterion("pi_name <=", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameLike(String value) {
            addCriterion("pi_name like", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameNotLike(String value) {
            addCriterion("pi_name not like", value, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameIn(List<String> values) {
            addCriterion("pi_name in", values, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameNotIn(List<String> values) {
            addCriterion("pi_name not in", values, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameBetween(String value1, String value2) {
            addCriterion("pi_name between", value1, value2, "piName");
            return (Criteria) this;
        }

        public Criteria andPiNameNotBetween(String value1, String value2) {
            addCriterion("pi_name not between", value1, value2, "piName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated do_not_delete_during_merge Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bm_geo_placeinfo
     *
     * @mbggenerated Fri Nov 13 23:23:31 GMT+08:00 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}